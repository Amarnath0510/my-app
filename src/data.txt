[
     {
      id:"100",   
      name:"Godfather",
      poster:"https://m.media-amazon.com/images/M/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJmNWYtYzZlODY3ZTk3OTFlXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_.jpg",
      ratings:9.2,
      summary:"The aging patriarch of an organized crime dynasty in postwar New York City transfers control of his clandestine empire to his reluctant youngest son",
      trailer:"https://www.youtube.com/embed/kTlhEX0kmL8",
    },
    {
        id:"101",
    name:"The pursuit of Happyness",
    poster:"https://miro.medium.com/max/548/1*Y8vXN1mJeEHyXWJtFICjiQ.jpeg",
    ratings:8.7,
    summary:"Tired of Chris's professional failures, his wife decides to separate, leaving him financially broke with an unpaid internship in a brokerage firm and his son's custody to deal with.",
    trailer:"https://www.youtube.com/embed/89Kq8SDyvfg" 
    },
    {
    id:"102",
      name:"Avengers",
      poster:"https://terrigen-cdn-dev.marvel.com/content/prod/1x/avengersendgame_lob_crd_05.jpg",
      ratings:8,
      summary:"Earth's mightiest heroes must come together and learn to fight as a team if they are going to stop the mischievous Loki and his alien army from enslaving humanity.",
      trailer:"https://www.youtube.com/embed/TcMBFSGVi1c"
    },
    {
        id:"103",
      name:"Wolf of the wall street",
      poster:"https://flxt.tmsimg.com/assets/p9991602_p_v13_ah.jpg",
      ratings:8.2,
      summary:"Based on the true story of Jordan Belfort, from his rise to a wealthy stock-broker living the high life to his fall involving crime, corruption and the federal government.",
      trailer:"https://www.youtube.com/embed/iszwuX1AK6A"
    },
    {
        id:"104",
      name:"Nayagan",
      poster:"https://images-na.ssl-images-amazon.com/images/I/91DAQ9OTVOL._RI_.jpg",
      ratings:8.7,
      summary:"Velu Nayakan, who witnesses the brutal murder of his father, kills a corrupt policeman and escapes to Mumbai, only to become a gangster.",
      trailer:"https://www.youtube.com/embed/1S6YkmYvgi8",
    },
    {
        id:"105",
      name:"Thalapathy",
      poster:"https://images-na.ssl-images-amazon.com/images/I/616tUbWJV1L._RI_.jpg",
      ratings:8.5,
      summary:"An orphan named Surya raised in a slum befriends a good crime boss named Devaraj and works for him. Their existence is threatened when a new honest district collector arrives.",
      trailer:"https://www.youtube.com/embed/-MEJKs5m-cU",
    },
    {
        id:"106",
      name:"Jai Bheem",
      poster:"https://m.media-amazon.com/images/M/MV5BY2Y5ZWMwZDgtZDQxYy00Mjk0LThhY2YtMmU1MTRmMjVhMjRiXkEyXkFqcGdeQXVyMTI1NDEyNTM5._V1_FMjpg_UX1000_.jpg",
      ratings:9.8,
      summary:"A pregnant woman from a primitive tribal community, searches desperately for her husband, who is missing from police custody. A High Court advocate rises in support to find her husband and seek justice for them.",
      trailer:"https://www.youtube.com/embed/Gc6dEDnL8JA",
    },
    {
        id:"107",
      name:"kaththi",
      poster:"http://3.bp.blogspot.com/-pQJ25BfkxZc/VEcspZxO__I/AAAAAAAAEm0/pdqBdjZetAs/s1600/Vijay-samantha-Kaththi-movie-stills-24.jpg",
      ratings:8.1,
      summary:"Kathiresan, who escapes from prison, accidentally meets his lookalike, Jeeva, who gets shot by criminals. Kathiresan masquerades as Jeeva in order to save himself, but it turns him into a crusader.",
      trailer:"https://www.youtube.com/embed/bMf0IyzyKt4"
    },
  ];

   <Route path="/color-game">
     <AddColor/>
     </Route>
     <Route path="/tic-tac-toe">
     <TicTacToe/>
     </Route>
      <Button variant="text" color="inherit"  onClick={()=> history.push("/color-game")} >Color game</Button>
   <Button variant="text" color="inherit"  onClick={()=> history.push("/tic-tac-toe")} >Tic-Tac-Toe game</Button>
     <Button variant="text" color="inherit"  onClick={()=> history.push("/form")} >BasicForm</Button>
   147 function TicTacToe(){
      <Route path="/form">
     <BasicForm/>
     </Route>
      import {  useFormik } from 'formik';
 import * as yup from 'yup';
    const validateForm = (values)=>{
      const errors={};
      console.log(validateForm,values);

    if( values.email.length<5){
      errors.email="Please provide email more than 5 letters"
    }
    else if (
     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(values.email)
    ) {
     errors.email = 'Invalid email address';
    }

  if( values.password.length<8){
     errors.password="Please provide password more than 8 letters"
   }   if( values.password.length>12){
   errors.password="Please provide password less than 12 letters"
  }
   console.log(errors);
   return errors;
  };
BasicForm.js

// export function BasicForm() {
//   const formik=useFormik({
//     initialValues:{email:"",password:""},
//     validate:validateForm,
//     onSubmit:(values)=>{
//       console.log("onSubmit",values);
//     }
//   })
//   return (
//     <form onSubmit={formik.handleSubmit}>
//   <input 
//   id="email"
//   value={formik.values.email}
//   onChange={formik.handleChange}
//   onBlur={formik.handleBlur}
//    type="email"
//     placeholder="Enter your email"
//     />
//     {
//       formik.errors.email &&
//       formik.touched.email &&
//       formik.errors.email
//   }
//   <input 
//   id="password"
//   value={formik.values.password}
//   onChange={formik.handleChange}
//   onBlur={formik.handleBlur}
//   type="password"
//    placeholder="Enter your password "
//    />
//    {
//      formik.errors.password &&
//      formik.touched.password &&
//      formik.errors.password
//  }
//   <button type="submit">Submit</button>
//   </form>
//   );
// }
const formValidationSchema =yup.object({
  email:yup
  .string()
  .min(5,"Need a bigger email")
  .required("why not fill this email?")
  .matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i,"Pattern not matched"),
password:yup
.string()
.min(8,"Need a longer password")
.max(12,"Too much password")
.required("Why not fill this password?"),

});
export function BasicForm() {
  const {handleSubmit,values,handleChange,handleBlur,errors,touched }=
  useFormik({
    initialValues:{email:"",password:""},
   validationSchema:formValidationSchema,
    onSubmit:(values)=>{
      console.log("onSubmit",values);
    },
  })
  return (
    <form onSubmit={handleSubmit}>
  <input 
  id="email"
  name="email"
  value={values.email}
  onChange={handleChange}
  onBlur={handleBlur}
   type="email"
    placeholder="Enter your email"
    />
    {
      errors.email &&
      touched.email &&
      errors.email
  }
  <input 
  id="password"
  name="password"
  value={values.password}
  onChange={handleChange}
  onBlur={handleBlur}
  type="password"
   placeholder="Enter your password "
   />
   {
     errors.password &&
     touched.password ?
     errors.password:""
 }
  <button type="submit">Submit</button>
  </form>
  );
}
